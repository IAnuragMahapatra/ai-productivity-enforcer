{
  "summary": {},
  "problems": [
    {
      "id": 1,
      "name": "Contains Duplicate",
      "url": "https://neetcode.io/problems/contains-duplicate",
      "topic": "Arrays & Hashing",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 2,
      "name": "Valid Anagram",
      "url": "https://neetcode.io/problems/valid-anagram",
      "topic": "Arrays & Hashing",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 3,
      "name": "Two Sum",
      "url": "https://neetcode.io/problems/two-sum",
      "topic": "Arrays & Hashing",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 4,
      "name": "Group Anagrams",
      "url": "https://neetcode.io/problems/group-anagrams",
      "topic": "Arrays & Hashing",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 5,
      "name": "Top K Frequent Elements",
      "url": "https://neetcode.io/problems/top-k-frequent-elements",
      "topic": "Arrays & Hashing",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 6,
      "name": "Product of Array Except Self",
      "url": "https://neetcode.io/problems/product-of-array-except-self",
      "topic": "Arrays & Hashing",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 7,
      "name": "Valid Sudoku",
      "url": "https://neetcode.io/problems/valid-sudoku",
      "topic": "Arrays & Hashing",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 8,
      "name": "Encode and Decode Strings",
      "url": "https://neetcode.io/problems/string-encode-and-decode",
      "topic": "Arrays & Hashing",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 9,
      "name": "Longest Consecutive Sequence",
      "url": "https://neetcode.io/problems/longest-consecutive-sequence",
      "topic": "Arrays & Hashing",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 10,
      "name": "Valid Palindrome",
      "url": "https://neetcode.io/problems/valid-palindrome",
      "topic": "Two Pointers",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 11,
      "name": "Two Sum II - Input Array Is Sorted",
      "url": "https://neetcode.io/problems/two-sum-ii-input-array-is-sorted",
      "topic": "Two Pointers",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 12,
      "name": "3Sum",
      "url": "https://neetcode.io/problems/3sum",
      "topic": "Two Pointers",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 13,
      "name": "Container With Most Water",
      "url": "https://neetcode.io/problems/container-with-most-water",
      "topic": "Two Pointers",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 14,
      "name": "Trapping Rain Water",
      "url": "https://neetcode.io/problems/trapping-rain-water",
      "topic": "Two Pointers",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 15,
      "name": "Best Time to Buy and Sell Stock",
      "url": "https://neetcode.io/problems/best-time-to-buy-and-sell-stock",
      "topic": "Sliding Window",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 16,
      "name": "Longest Substring Without Repeating Characters",
      "url": "https://neetcode.io/problems/longest-substring-without-repeating-characters",
      "topic": "Sliding Window",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 17,
      "name": "Longest Repeating Character Replacement",
      "url": "https://neetcode.io/problems/longest-repeating-character-replacement",
      "topic": "Sliding Window",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 18,
      "name": "Permutation in String",
      "url": "https://neetcode.io/problems/permutation-in-string",
      "topic": "Sliding Window",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 19,
      "name": "Minimum Window Substring",
      "url": "https://neetcode.io/problems/minimum-window-substring",
      "topic": "Sliding Window",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 20,
      "name": "Sliding Window Maximum",
      "url": "https://neetcode.io/problems/sliding-window-maximum",
      "topic": "Sliding Window",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 21,
      "name": "Valid Parentheses",
      "url": "https://neetcode.io/problems/valid-parentheses",
      "topic": "Stack",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 22,
      "name": "Min Stack",
      "url": "https://neetcode.io/problems/min-stack",
      "topic": "Stack",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 23,
      "name": "Evaluate Reverse Polish Notation",
      "url": "https://neetcode.io/problems/evaluate-reverse-polish-notation",
      "topic": "Stack",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 24,
      "name": "Generate Parentheses",
      "url": "https://neetcode.io/problems/generate-parentheses",
      "topic": "Stack",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 25,
      "name": "Daily Temperatures",
      "url": "https://neetcode.io/problems/daily-temperatures",
      "topic": "Stack",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 26,
      "name": "Car Fleet",
      "url": "https://neetcode.io/problems/car-fleet",
      "topic": "Stack",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 27,
      "name": "Largest Rectangle in Histogram",
      "url": "https://neetcode.io/problems/largest-rectangle-in-histogram",
      "topic": "Stack",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 28,
      "name": "Binary Search",
      "url": "https://neetcode.io/problems/binary-search",
      "topic": "Binary Search",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 29,
      "name": "Search a 2D Matrix",
      "url": "https://neetcode.io/problems/search-a-2d-matrix",
      "topic": "Binary Search",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 30,
      "name": "Koko Eating Bananas",
      "url": "https://neetcode.io/problems/koko-eating-bananas",
      "topic": "Binary Search",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 31,
      "name": "Find Minimum in Rotated Sorted Array",
      "url": "https://neetcode.io/problems/find-minimum-in-rotated-sorted-array",
      "topic": "Binary Search",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 32,
      "name": "Search in Rotated Sorted Array",
      "url": "https://neetcode.io/problems/search-in-rotated-sorted-array",
      "topic": "Binary Search",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 33,
      "name": "Time Based Key-Value Store",
      "url": "https://neetcode.io/problems/time-based-key-value-store",
      "topic": "Binary Search",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 34,
      "name": "Median of Two Sorted Arrays",
      "url": "https://neetcode.io/problems/median-of-two-sorted-arrays",
      "topic": "Binary Search",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 35,
      "name": "Reverse Linked List",
      "url": "https://neetcode.io/problems/reverse-linked-list",
      "topic": "Linked List",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 36,
      "name": "Merge Two Sorted Lists",
      "url": "https://neetcode.io/problems/merge-two-sorted-lists",
      "topic": "Linked List",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 37,
      "name": "Reorder List",
      "url": "https://neetcode.io/problems/reorder-list",
      "topic": "Linked List",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 38,
      "name": "Remove Nth Node From End of List",
      "url": "https://neetcode.io/problems/remove-nth-node-from-end-of-list",
      "topic": "Linked List",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 39,
      "name": "Copy List with Random Pointer",
      "url": "https://neetcode.io/problems/copy-list-with-random-pointer",
      "topic": "Linked List",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 40,
      "name": "Add Two Numbers",
      "url": "https://neetcode.io/problems/add-two-numbers",
      "topic": "Linked List",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 41,
      "name": "Linked List Cycle",
      "url": "https://neetcode.io/problems/linked-list-cycle",
      "topic": "Linked List",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 42,
      "name": "Find the Duplicate Number",
      "url": "https://neetcode.io/problems/find-the-duplicate-number",
      "topic": "Linked List",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 43,
      "name": "LRU Cache",
      "url": "https://neetcode.io/problems/lru-cache",
      "topic": "Linked List",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 44,
      "name": "Merge k Sorted Lists",
      "url": "https://neetcode.io/problems/merge-k-sorted-lists",
      "topic": "Linked List",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 45,
      "name": "Reverse Nodes in k-Group",
      "url": "https://neetcode.io/problems/reverse-nodes-in-k-group",
      "topic": "Linked List",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 46,
      "name": "Invert Binary Tree",
      "url": "https://neetcode.io/problems/invert-binary-tree",
      "topic": "Trees",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 47,
      "name": "Maximum Depth of Binary Tree",
      "url": "https://neetcode.io/problems/maximum-depth-of-binary-tree",
      "topic": "Trees",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 48,
      "name": "Diameter of Binary Tree",
      "url": "https://neetcode.io/problems/diameter-of-binary-tree",
      "topic": "Trees",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 49,
      "name": "Balanced Binary Tree",
      "url": "https://neetcode.io/problems/balanced-binary-tree",
      "topic": "Trees",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 50,
      "name": "Same Tree",
      "url": "https://neetcode.io/problems/same-tree",
      "topic": "Trees",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 51,
      "name": "Subtree of Another Tree",
      "url": "https://neetcode.io/problems/subtree-of-another-tree",
      "topic": "Trees",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 52,
      "name": "Lowest Common Ancestor of a Binary Search Tree",
      "url": "https://neetcode.io/problems/lowest-common-ancestor-of-a-binary-search-tree",
      "topic": "Trees",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 53,
      "name": "Binary Tree Level Order Traversal",
      "url": "https://neetcode.io/problems/binary-tree-level-order-traversal",
      "topic": "Trees",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 54,
      "name": "Binary Tree Right Side View",
      "url": "https://neetcode.io/problems/binary-tree-right-side-view",
      "topic": "Trees",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 55,
      "name": "Count Good Nodes in Binary Tree",
      "url": "https://neetcode.io/problems/count-good-nodes-in-binary-tree",
      "topic": "Trees",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 56,
      "name": "Validate Binary Search Tree",
      "url": "https://neetcode.io/problems/validate-binary-search-tree",
      "topic": "Trees",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 57,
      "name": "Kth Smallest Element in a BST",
      "url": "https://neetcode.io/problems/kth-smallest-element-in-a-bst",
      "topic": "Trees",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 58,
      "name": "Construct Binary Tree from Preorder and Inorder Traversal",
      "url": "https://neetcode.io/problems/construct-binary-tree-from-preorder-and-inorder-traversal",
      "topic": "Trees",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 59,
      "name": "Binary Tree Maximum Path Sum",
      "url": "https://neetcode.io/problems/binary-tree-maximum-path-sum",
      "topic": "Trees",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 60,
      "name": "Serialize and Deserialize Binary Tree",
      "url": "https://neetcode.io/problems/serialize-and-deserialize-binary-tree",
      "topic": "Trees",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 61,
      "name": "Implement Trie (Prefix Tree)",
      "url": "https://neetcode.io/problems/implement-trie-prefix-tree",
      "topic": "Tries",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 62,
      "name": "Design Add and Search Words Data Structure",
      "url": "https://neetcode.io/problems/design-add-and-search-words-data-structure",
      "topic": "Tries",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 63,
      "name": "Word Search II",
      "url": "https://neetcode.io/problems/word-search-ii",
      "topic": "Tries",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 64,
      "name": "Kth Largest Element in a Stream",
      "url": "https://neetcode.io/problems/kth-largest-element-in-a-stream",
      "topic": "Heap / Priority Queue",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 65,
      "name": "Last Stone Weight",
      "url": "https://neetcode.io/problems/last-stone-weight",
      "topic": "Heap / Priority Queue",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 66,
      "name": "K Closest Points to Origin",
      "url": "https://neetcode.io/problems/k-closest-points-to-origin",
      "topic": "Heap / Priority Queue",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 67,
      "name": "Kth Largest Element in an Array",
      "url": "https://neetcode.io/problems/kth-largest-element-in-an-array",
      "topic": "Heap / Priority Queue",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 68,
      "name": "Task Scheduler",
      "url": "https://neetcode.io/problems/task-scheduler",
      "topic": "Heap / Priority Queue",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 69,
      "name": "Design Twitter",
      "url": "https://neetcode.io/problems/design-twitter",
      "topic": "Heap / Priority Queue",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 70,
      "name": "Find Median from Data Stream",
      "url": "https://neetcode.io/problems/find-median-from-data-stream",
      "topic": "Heap / Priority Queue",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 71,
      "name": "Subsets",
      "url": "https://neetcode.io/problems/subsets",
      "topic": "Backtracking",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 72,
      "name": "Combination Sum",
      "url": "https://neetcode.io/problems/combination-sum",
      "topic": "Backtracking",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 73,
      "name": "Permutations",
      "url": "https://neetcode.io/problems/permutations",
      "topic": "Backtracking",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 74,
      "name": "Subsets II",
      "url": "https://neetcode.io/problems/subsets-ii",
      "topic": "Backtracking",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 75,
      "name": "Combination Sum II",
      "url": "https://neetcode.io/problems/combination-sum-ii",
      "topic": "Backtracking",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 76,
      "name": "Word Search",
      "url": "https://neetcode.io/problems/word-search",
      "topic": "Backtracking",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 77,
      "name": "Palindrome Partitioning",
      "url": "https://neetcode.io/problems/palindrome-partitioning",
      "topic": "Backtracking",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 78,
      "name": "Letter Combinations of a Phone Number",
      "url": "https://neetcode.io/problems/letter-combinations-of-a-phone-number",
      "topic": "Backtracking",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 79,
      "name": "N-Queens",
      "url": "https://neetcode.io/problems/n-queens",
      "topic": "Backtracking",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 80,
      "name": "Number of Islands",
      "url": "https://neetcode.io/problems/number-of-islands",
      "topic": "Graphs",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 81,
      "name": "Clone Graph",
      "url": "https://neetcode.io/problems/clone-graph",
      "topic": "Graphs",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 82,
      "name": "Max Area of Island",
      "url": "https://neetcode.io/problems/max-area-of-island",
      "topic": "Graphs",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 83,
      "name": "Pacific Atlantic Water Flow",
      "url": "https://neetcode.io/problems/pacific-atlantic-water-flow",
      "topic": "Graphs",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 84,
      "name": "Surrounded Regions",
      "url": "https://neetcode.io/problems/surrounded-regions",
      "topic": "Graphs",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 85,
      "name": "Rotting Oranges",
      "url": "https://neetcode.io/problems/rotting-oranges",
      "topic": "Graphs",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 86,
      "name": "Walls and Gates",
      "url": "https://neetcode.io/problems/walls-and-gates",
      "topic": "Graphs",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 87,
      "name": "Course Schedule",
      "url": "https://neetcode.io/problems/course-schedule",
      "topic": "Graphs",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 88,
      "name": "Course Schedule II",
      "url": "https://neetcode.io/problems/course-schedule-ii",
      "topic": "Graphs",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 89,
      "name": "Redundant Connection",
      "url": "https://neetcode.io/problems/redundant-connection",
      "topic": "Graphs",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 90,
      "name": "Number of Connected Components in an Undirected Graph",
      "url": "https://neetcode.io/problems/number-of-connected-components-in-an-undirected-graph",
      "topic": "Graphs",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 91,
      "name": "Graph Valid Tree",
      "url": "https://neetcode.io/problems/graph-valid-tree",
      "topic": "Graphs",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 92,
      "name": "Word Ladder",
      "url": "https://neetcode.io/problems/word-ladder",
      "topic": "Graphs",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 93,
      "name": "Reconstruct Itinerary",
      "url": "https://neetcode.io/problems/reconstruct-itinerary",
      "topic": "Advanced Graphs",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 94,
      "name": "Min Cost to Connect All Points",
      "url": "https://neetcode.io/problems/min-cost-to-connect-all-points",
      "topic": "Advanced Graphs",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 95,
      "name": "Network Delay Time",
      "url": "https://neetcode.io/problems/network-delay-time",
      "topic": "Advanced Graphs",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 96,
      "name": "Swim in Rising Water",
      "url": "https://neetcode.io/problems/swim-in-rising-water",
      "topic": "Advanced Graphs",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 97,
      "name": "Alien Dictionary",
      "url": "https://neetcode.io/problems/alien-dictionary",
      "topic": "Advanced Graphs",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 98,
      "name": "Cheapest Flights Within K Stops",
      "url": "https://neetcode.io/problems/cheapest-flights-within-k-stops",
      "topic": "Advanced Graphs",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 99,
      "name": "Climbing Stairs",
      "url": "https://neetcode.io/problems/climbing-stairs",
      "topic": "1-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 100,
      "name": "Min Cost Climbing Stairs",
      "url": "https://neetcode.io/problems/min-cost-climbing-stairs",
      "topic": "1-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 101,
      "name": "House Robber",
      "url": "https://neetcode.io/problems/house-robber",
      "topic": "1-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 102,
      "name": "House Robber II",
      "url": "https://neetcode.io/problems/house-robber-ii",
      "topic": "1-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 103,
      "name": "Longest Palindromic Substring",
      "url": "https://neetcode.io/problems/longest-palindromic-substring",
      "topic": "1-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 104,
      "name": "Palindromic Substrings",
      "url": "https://neetcode.io/problems/palindromic-substrings",
      "topic": "1-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 105,
      "name": "Decode Ways",
      "url": "https://neetcode.io/problems/decode-ways",
      "topic": "1-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 106,
      "name": "Coin Change",
      "url": "https://neetcode.io/problems/coin-change",
      "topic": "1-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 107,
      "name": "Maximum Product Subarray",
      "url": "https://neetcode.io/problems/maximum-product-subarray",
      "topic": "1-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 108,
      "name": "Word Break",
      "url": "https://neetcode.io/problems/word-break",
      "topic": "1-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 109,
      "name": "Longest Increasing Subsequence",
      "url": "https://neetcode.io/problems/longest-increasing-subsequence",
      "topic": "1-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 110,
      "name": "Partition Equal Subset Sum",
      "url": "https://neetcode.io/problems/partition-equal-subset-sum",
      "topic": "1-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 111,
      "name": "Unique Paths",
      "url": "https://neetcode.io/problems/unique-paths",
      "topic": "2-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 112,
      "name": "Longest Common Subsequence",
      "url": "https://neetcode.io/problems/longest-common-subsequence",
      "topic": "2-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 113,
      "name": "Best Time to Buy and Sell Stock with Cooldown",
      "url": "https://neetcode.io/problems/best-time-to-buy-and-sell-stock-with-cooldown",
      "topic": "2-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 114,
      "name": "Coin Change II",
      "url": "https://neetcode.io/problems/coin-change-ii",
      "topic": "2-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 115,
      "name": "Target Sum",
      "url": "https://neetcode.io/problems/target-sum",
      "topic": "2-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 116,
      "name": "Interleaving String",
      "url": "https://neetcode.io/problems/interleaving-string",
      "topic": "2-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 117,
      "name": "Longest Increasing Path in a Matrix",
      "url": "https://neetcode.io/problems/longest-increasing-path-in-a-matrix",
      "topic": "2-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 118,
      "name": "Distinct Subsequences",
      "url": "https://neetcode.io/problems/distinct-subsequences",
      "topic": "2-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 119,
      "name": "Edit Distance",
      "url": "https://neetcode.io/problems/edit-distance",
      "topic": "2-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 120,
      "name": "Burst Balloons",
      "url": "https://neetcode.io/problems/burst-balloons",
      "topic": "2-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 121,
      "name": "Regular Expression Matching",
      "url": "https://neetcode.io/problems/regular-expression-matching",
      "topic": "2-D DP",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 122,
      "name": "Maximum Subarray",
      "url": "https://neetcode.io/problems/maximum-subarray",
      "topic": "Greedy",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 123,
      "name": "Jump Game",
      "url": "https://neetcode.io/problems/jump-game",
      "topic": "Greedy",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 124,
      "name": "Jump Game II",
      "url": "https://neetcode.io/problems/jump-game-ii",
      "topic": "Greedy",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 125,
      "name": "Gas Station",
      "url": "https://neetcode.io/problems/gas-station",
      "topic": "Greedy",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 126,
      "name": "Hand of Straights",
      "url": "https://neetcode.io/problems/hand-of-straights",
      "topic": "Greedy",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 127,
      "name": "Merge Triplets to Form Target Triplet",
      "url": "https://neetcode.io/problems/merge-triplets-to-form-target-triplet",
      "topic": "Greedy",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 128,
      "name": "Partition Labels",
      "url": "https://neetcode.io/problems/partition-labels",
      "topic": "Greedy",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 129,
      "name": "Valid Parenthesis String",
      "url": "https://neetcode.io/problems/valid-parenthesis-string",
      "topic": "Greedy",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 130,
      "name": "Insert Interval",
      "url": "https://neetcode.io/problems/insert-interval",
      "topic": "Intervals",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 131,
      "name": "Merge Intervals",
      "url": "https://neetcode.io/problems/merge-intervals",
      "topic": "Intervals",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 132,
      "name": "Non-overlapping Intervals",
      "url": "https://neetcode.io/problems/non-overlapping-intervals",
      "topic": "Intervals",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 133,
      "name": "Meeting Rooms",
      "url": "https://neetcode.io/problems/meeting-rooms",
      "topic": "Intervals",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 134,
      "name": "Meeting Rooms II",
      "url": "https://neetcode.io/problems/meeting-rooms-ii",
      "topic": "Intervals",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 135,
      "name": "Minimum Interval to Include Each Query",
      "url": "https://neetcode.io/problems/minimum-interval-to-include-each-query",
      "topic": "Intervals",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 136,
      "name": "Sum of Two Integers",
      "url": "https://neetcode.io/problems/sum-of-two-integers",
      "topic": "Bit Manipulation",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 137,
      "name": "Number of 1 Bits",
      "url": "https://neetcode.io/problems/number-of-1-bits",
      "topic": "Bit Manipulation",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 138,
      "name": "Counting Bits",
      "url": "https://neetcode.io/problems/counting-bits",
      "topic": "Bit Manipulation",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 139,
      "name": "Reverse Bits",
      "url": "https://neetcode.io/problems/reverse-bits",
      "topic": "Bit Manipulation",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 140,
      "name": "Missing Number",
      "url": "https://neetcode.io/problems/missing-number",
      "topic": "Bit Manipulation",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 141,
      "name": "Single Number",
      "url": "https://neetcode.io/problems/single-number",
      "topic": "Bit Manipulation",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 142,
      "name": "Reverse Integer",
      "url": "https://neetcode.io/problems/reverse-integer",
      "topic": "Bit Manipulation",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 143,
      "name": "Rotate Image",
      "url": "https://neetcode.io/problems/rotate-image",
      "topic": "Math & Geometry",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 144,
      "name": "Spiral Matrix",
      "url": "https://neetcode.io/problems/spiral-matrix",
      "topic": "Math & Geometry",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 145,
      "name": "Set Matrix Zeroes",
      "url": "https://neetcode.io/problems/set-matrix-zeroes",
      "topic": "Math & Geometry",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 146,
      "name": "Happy Number",
      "url": "https://neetcode.io/problems/happy-number",
      "topic": "Math & Geometry",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 147,
      "name": "Plus One",
      "url": "https://neetcode.io/problems/plus-one",
      "topic": "Math & Geometry",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 148,
      "name": "Pow(x, n)",
      "url": "https://neetcode.io/problems/powx-n",
      "topic": "Math & Geometry",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 149,
      "name": "Multiply Strings",
      "url": "https://neetcode.io/problems/multiply-strings",
      "topic": "Math & Geometry",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    },
    {
      "id": 150,
      "name": "Detect Squares",
      "url": "https://neetcode.io/problems/detect-squares",
      "topic": "Math & Geometry",
      "solve_count": 0,
      "last_solved_date": null,
      "notes": "",
      "status": "new"
    }
  ]
}